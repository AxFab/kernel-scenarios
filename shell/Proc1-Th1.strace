# Master program
# Promt for login and start the shell
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

# The standard library need to map a first alloc arena
sys_mmap (-1, 0, 0x10000, 0, 0x1276) = +
# The main print greetings and look for some pwd
sys_write (1, "Master", 6, -1) = 6
sys_pinfo ("/usr", 4096, 1) = 0
# Try to open, then create a file, both failed
sys_open (".syr", -1, 0, 0) = -1
sys_open (".syr", -1, 241, 0) = -1
sys_write (2, "FailedOpen[", 11, -1) = 11
sys_write (2, "22", 2, -1) = 2
sys_write (2, "]<", 2, -1) = 2
sys_write (2, "Inval", 5, -1) = 5
sys_write (2, ">\n", 2, -1) = 2
# Prompt for login
sys_write (2, "Login:", 6, -1) = 6
sys_read (0, "F", 1, -1) = 1
WAKEUP
sys_read (0, "a", 1, -1) = 1
sys_read (0, "b", 1, -1) = 1
sys_read (0, "i", 1, -1) = 1
sys_read (0, "e", 1, -1) = 1
sys_read (0, "n", 1, -1) = 1
sys_read (0, "\n", 1, -1) = 1
# Answer when input is received
sys_write (1, "Welcome", 7, -1) = 7
sys_write (1, "Fabien", 6, -1) = 6
# Start The shell program
sys_exec ("bin/master",  "bin/sh_-i", "Fabien", -1, -1, -1, -1, 0, 0) = 2
# sys_wait (0, 2, 0)
sys_exit (0, 0)
